
# steps:
#   - task: NodeTool@0
#     inputs:
#       versionSpec: '12.x'
#     displayName: 'Install Node.js'
#   - task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreAndSaveCacheV1.RestoreAndSaveCache@1
#     inputs:
#       keyfile: '**/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
#       targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
#       vstsFeed: 'nx_azure_node_modules_cache_feed'
#   - script: |
#       yarn install --ignore-engines --frozen-lockfile
#     displayName: Install dependencies only if there is no cache available
#     condition: ne(variables['CacheRestored'], 'true')
variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  
steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
      checkLatest: true
    displayName: 'Install Node.js'

  - script: |
      yarn install --ignore-engines --frozen-lockfile
    displayName: 'npm install'
    env: { NX_CLOUD_AUTH_TOKEN: Mjk4MjdiYjEtNjgwNi00YTUwLWE5NDAtYWM4MWNkOTVkNGJmfHJlYWQ= }

  - task: Cache@2
    inputs:
      key: 'yarn | "$(Agent.OS)" | yarn.lock'
      restoreKeys: |
        yarn | "$(Agent.OS)"
        yarn
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn packages

- script: yarn --frozen-lockfile
